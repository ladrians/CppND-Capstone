<?xml version="1.0" encoding="utf8"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused"       default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui"          default="false"/>
  <arg name="headless"     default="false"/>
  <arg name="debug"        default="false"/>
  <arg name="robot_name"   default="lsbot" />
  <arg name="world_name"   default="corridor_with_obstacles.world"/>
  <arg name="world_path"   default="$(find lsbot_gazebo)/worlds/"/>
  <arg name="use_rviz" default="true"/>
  <arg name="use_rqt" default="true"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="verbose"      value="true"/>    
    <arg name="world_name"   value="$(arg world_path)$(arg world_name)"/>
    <arg name="debug"        value="$(arg debug)" />
    <arg name="gui"          value="$(arg gui)" />
    <arg name="paused"       value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless"     value="$(arg headless)"/>
  </include>

  <!-- urdf xml robot description loaded on the Parameter Server-->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find lsbot_description)/urdf/$(arg robot_name).xacro'" /> 

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <!-- start robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="20.0" />
  </node>


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model $(arg robot_name) -param robot_description"/> 

  <group if="$(arg use_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" output="screen"/>
  </group>

  <group if="$(arg use_rqt)">
    <node pkg="rqt_gui" type="rqt_gui" name="rqt_gui" output="screen" />
  </group>

</launch>
